#!/usr/bin/env bash
if [[ -z "${DCMD_NAME}}" ]]; then
    echo "DCMD_NAME must be set" >&2
    exit 1
fi

if [[ -z "${DCMD_IMAGE}}" ]]; then
    echo "DCMD_IMAGE must be set" >&2
    exit 1
fi

CONFIG_DIR="$HOME/.config/${DCMD_NAME}"

mkdir -p "${CONFIG_DIR}"
LAST_RUN_FILE="${CONFIG_DIR}/last-run"

DOCKER_SOCKET_OPTIONS=""
if [[ -S "/var/run/docker.sock" ]]; then
    DOCKER_SOCKET_OPTIONS="-v /var/run/docker.sock:/var/run/docker.sock"
fi

if [[ ! -f "${LAST_RUN_FILE}" ]] || [[ $(($(date +%s)-$(cat "${LAST_RUN_FILE}"))) -gt $((60*60)) ]]; then
    echo "$(date +%s)" > "${LAST_RUN_FILE}"
    TOKEN=$(curl -s "https://auth.docker.io/token?service=registry.docker.io&scope=repository:${DCMD_IMAGE}:pull" | jq '.token' -r)
    REMOTE_DIGEST="$(curl -s -I \
        -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
        -H "Authorization: Bearer ${TOKEN}" "https://registry.hub.docker.com/v2/${DCMD_IMAGE}/manifests/latest" | \
        grep "Docker-Content-Digest:" | cut -d ' ' -f 2 | tr -d '\r')"

    LOCAL_DIGEST="$(docker image inspect "${DCMD_IMAGE}:latest" -f '{{.RepoDigests}}' | cut -d '@' -f 2 | cut -d $']' -f 1)"
    if [[ "${LOCAL_DIGEST}" != "${REMOTE_DIGEST}" ]]; then
        UPDATE_MESSAGE="docker pull ${DCMD_IMAGE}"
        if [[ ! -z "{DOCKER_SOCKET_OPTIONS}" ]]; then
            UPDATE_MESSAGE="${DCMD_NAME} meta update"
        fi

        echo "Update available. Run \"${UPDATE_MESSAGE}\" to update" >&2
    fi
fi

SSH_KNOWN_HOSTS_OPTIONS=""
if [[ -f "$HOME/.ssh/known_hosts" ]]; then
    SSH_KNOWN_HOSTS_OPTIONS="--volume $HOME/.ssh/known_hosts:/root/.ssh/known_hosts"
fi

SSH_AGENT_OPTIONS=""
if [[ ! -z "${SSH_AUTH_SOCK:-}" ]]; then
    SSH_AGENT_OPTIONS="--volume ${SSH_AUTH_SOCK}:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent"
fi

docker run -it ${DCMD_EXTRA_DOCKER_OPTIONS} ${DOCKER_SOCKET_OPTIONS} ${SSH_KNOWN_HOSTS_OPTIONS} ${SSH_AGENT_OPTIONS} "${DCMD_IMAGE}" "$@"
